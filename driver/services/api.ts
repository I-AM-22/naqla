/**
 * Generated by orval v6.25.0 🍺
 * Do not edit manually.
 * naqleh
 * naqleh API
 * OpenAPI spec version: 1.0
 */
import type {
  AddAdvansToCarDto,
  AddAdvansToOrderDto,
  Admin,
  AdminsControllerFindOnePathParameters,
  AdminsControllerRemovePathParameters,
  AdminsControllerUpdatePathParameters,
  Advantage,
  AdvantagesControllerFindOnePathParameters,
  AdvantagesControllerRemovePathParameters,
  AdvantagesControllerUpdatePathParameters,
  AuthAdminResponse,
  AuthDriverControllerConfirmParams,
  AuthDriverResponse,
  AuthEmployeeResponse,
  AuthUserControllerConfirmParams,
  AuthUserResponse,
  Car,
  CarControllerAddAdvantagesToCarPathParameters,
  CarControllerDeletePathParameters,
  CarControllerFindOnePathParameters,
  CarControllerRemoveAdvantagesFromCarPathParameters,
  CarControllerUpdatePathParameters,
  CitiesControllerFindOnePathParameters,
  CitiesControllerRemovePathParameters,
  CitiesControllerUpdatePathParameters,
  City,
  ConfirmDriverDto,
  ConfirmUserDto,
  CreateAdminDto,
  CreateAdvantageDto,
  CreateCarDto,
  CreateCityDto,
  CreateEmployeeDto,
  CreateOrderDto,
  CreateRoleDto,
  Driver,
  DriversControllerFindOnePathParameters,
  DriversControllerFindParams,
  DriversControllerRemovePathParameters,
  DriversControllerUpdatePathParameters,
  Employee,
  EmployeesControllerFindOnePathParameters,
  EmployeesControllerRemovePathParameters,
  EmployeesControllerUpdatePathParameters,
  LoginAdminDto,
  LoginDriverDto,
  LoginEmployeeDto,
  LoginUserDto,
  OmitTypeClass,
  Order,
  OrderControllerAddAdvantagesToOrderPathParameters,
  OrderControllerDeletePathParameters,
  OrderControllerFindOnePathParameters,
  OrderControllerRemoveAdvantagesFromOrderPathParameters,
  OrderControllerUpdatePathParameters,
  PaginatedResponse,
  Permission,
  PermissionsControllerFindOnePathParameters,
  PhotosControllerUploadMultipleBody,
  PhotosControllerUploadSingleBody,
  Role,
  RolesControllerAddPermissionsPathParameters,
  RolesControllerDeletePermissionsPathParameters,
  RolesControllerFindOnePathParameters,
  RolesControllerUpdatePathParameters,
  SendConfirm,
  SignUpDriverDto,
  SignUpUserDto,
  UpdateAdminDto,
  UpdateAdvantageDto,
  UpdateCarDto,
  UpdateCityDto,
  UpdateDriverDto,
  UpdateDriverPhoneDto,
  UpdateEmployeeDto,
  UpdateOrderDto,
  UpdateRoleDto,
  UpdateUserDto,
  UpdateUserPhoneDto,
  User,
  UsersControllerFindOnePathParameters,
  UsersControllerFindParams,
  UsersControllerRemovePathParameters,
  UsersControllerUpdatePathParameters,
} from "./api.schemas";
import { fetchInstance } from "../lib/fetch";

export const authUserControllerSignup = (signUpUserDto: SignUpUserDto) => {
  return fetchInstance<SendConfirm>({
    url: `/api/v1/auth/user/signup`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: signUpUserDto,
  });
};

/**
 * @summary Login
 */
export const authUserControllerLogin = (loginUserDto: LoginUserDto) => {
  return fetchInstance<SendConfirm>({
    url: `/api/v1/auth/user/login`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: loginUserDto,
  });
};

/**
 * @summary Confirm
 */
export const authUserControllerConfirm = (
  confirmUserDto: ConfirmUserDto,
  params: AuthUserControllerConfirmParams,
) => {
  return fetchInstance<AuthUserResponse>({
    url: `/api/v1/auth/user/confirm`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: confirmUserDto,
    params,
  });
};

/**
 * @summary update phone number
 */
export const authUserControllerUpdateMyNumber = (
  updateUserPhoneDto: UpdateUserPhoneDto,
) => {
  return fetchInstance<SendConfirm>({
    url: `/api/v1/auth/user/updateMyNumber`,
    method: "PATCH",
    headers: { "Content-Type": "application/json" },
    data: updateUserPhoneDto,
  });
};

export const usersControllerFind = (params?: UsersControllerFindParams) => {
  return fetchInstance<PaginatedResponse>({
    url: `/api/v1/users`,
    method: "GET",
    params,
  });
};

export const usersControllerGetMyPhotos = () => {
  return fetchInstance<User>({ url: `/api/v1/users/myPhotos`, method: "GET" });
};

export const usersControllerGetMe = () => {
  return fetchInstance<User>({ url: `/api/v1/users/me`, method: "GET" });
};

export const usersControllerUpdateMe = (updateUserDto: UpdateUserDto) => {
  return fetchInstance<User>({
    url: `/api/v1/users/me`,
    method: "PATCH",
    headers: { "Content-Type": "application/json" },
    data: updateUserDto,
  });
};

export const usersControllerDeleteMe = () => {
  return fetchInstance<void>({ url: `/api/v1/users/me`, method: "DELETE" });
};

export const usersControllerFindOne = ({
  id,
}: UsersControllerFindOnePathParameters) => {
  return fetchInstance<User>({ url: `/api/v1/users/${id}`, method: "GET" });
};

export const usersControllerUpdate = (
  { id }: UsersControllerUpdatePathParameters,
  updateUserDto: UpdateUserDto,
) => {
  return fetchInstance<User>({
    url: `/api/v1/users/${id}`,
    method: "PATCH",
    headers: { "Content-Type": "application/json" },
    data: updateUserDto,
  });
};

export const usersControllerRemove = ({
  id,
}: UsersControllerRemovePathParameters) => {
  return fetchInstance<void>({ url: `/api/v1/users/${id}`, method: "DELETE" });
};

export const rolesControllerFind = () => {
  return fetchInstance<OmitTypeClass[]>({
    url: `/api/v1/roles`,
    method: "GET",
  });
};

export const rolesControllerCreate = (createRoleDto: CreateRoleDto) => {
  return fetchInstance<Role>({
    url: `/api/v1/roles`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: createRoleDto,
  });
};

export const rolesControllerFindOne = ({
  id,
}: RolesControllerFindOnePathParameters) => {
  return fetchInstance<Role>({ url: `/api/v1/roles/${id}`, method: "GET" });
};

export const rolesControllerUpdate = (
  { id }: RolesControllerUpdatePathParameters,
  updateRoleDto: UpdateRoleDto,
) => {
  return fetchInstance<Role>({
    url: `/api/v1/roles/${id}`,
    method: "PATCH",
    headers: { "Content-Type": "application/json" },
    data: updateRoleDto,
  });
};

/**
 * @summary add permissions to the role
 */
export const rolesControllerAddPermissions = (
  { id }: RolesControllerAddPermissionsPathParameters,
  updateRoleDto: UpdateRoleDto,
) => {
  return fetchInstance<Role>({
    url: `/api/v1/roles/${id}/permissions`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: updateRoleDto,
  });
};

/**
 * @summary remove permissions from the role
 */
export const rolesControllerDeletePermissions = (
  { id }: RolesControllerDeletePermissionsPathParameters,
  updateRoleDto: UpdateRoleDto,
) => {
  return fetchInstance<Role>({
    url: `/api/v1/roles/${id}/permissions`,
    method: "DELETE",
    headers: { "Content-Type": "application/json" },
    data: updateRoleDto,
  });
};

export const permissionsControllerFind = () => {
  return fetchInstance<OmitTypeClass[]>({
    url: `/api/v1/permissions`,
    method: "GET",
  });
};

export const permissionsControllerFindOne = ({
  id,
}: PermissionsControllerFindOnePathParameters) => {
  return fetchInstance<Permission>({
    url: `/api/v1/permissions/${id}`,
    method: "GET",
  });
};

export const citiesControllerCreate = (createCityDto: CreateCityDto) => {
  return fetchInstance<City>({
    url: `/api/v1/cities`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: createCityDto,
  });
};

export const citiesControllerFind = () => {
  return fetchInstance<City[]>({ url: `/api/v1/cities`, method: "GET" });
};

export const citiesControllerFindOne = ({
  id,
}: CitiesControllerFindOnePathParameters) => {
  return fetchInstance<City>({ url: `/api/v1/cities/${id}`, method: "GET" });
};

export const citiesControllerUpdate = (
  { id }: CitiesControllerUpdatePathParameters,
  updateCityDto: UpdateCityDto,
) => {
  return fetchInstance<City>({
    url: `/api/v1/cities/${id}`,
    method: "PATCH",
    headers: { "Content-Type": "application/json" },
    data: updateCityDto,
  });
};

export const citiesControllerRemove = ({
  id,
}: CitiesControllerRemovePathParameters) => {
  return fetchInstance<void>({ url: `/api/v1/cities/${id}`, method: "DELETE" });
};

/**
 * @summary Login
 */
export const employeesControllerLogin = (
  loginEmployeeDto: LoginEmployeeDto,
) => {
  return fetchInstance<AuthEmployeeResponse>({
    url: `/api/v1/employees/login`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: loginEmployeeDto,
  });
};

export const employeesControllerFind = () => {
  return fetchInstance<Employee>({ url: `/api/v1/employees`, method: "GET" });
};

export const employeesControllerCreate = (
  createEmployeeDto: CreateEmployeeDto,
) => {
  return fetchInstance<Employee>({
    url: `/api/v1/employees`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: createEmployeeDto,
  });
};

export const employeesControllerFindOne = ({
  id,
}: EmployeesControllerFindOnePathParameters) => {
  return fetchInstance<Employee>({
    url: `/api/v1/employees/${id}`,
    method: "GET",
  });
};

export const employeesControllerUpdate = (
  { id }: EmployeesControllerUpdatePathParameters,
  updateEmployeeDto: UpdateEmployeeDto,
) => {
  return fetchInstance<Employee>({
    url: `/api/v1/employees/${id}`,
    method: "PATCH",
    headers: { "Content-Type": "application/json" },
    data: updateEmployeeDto,
  });
};

export const employeesControllerRemove = ({
  id,
}: EmployeesControllerRemovePathParameters) => {
  return fetchInstance<void>({
    url: `/api/v1/employees/${id}`,
    method: "DELETE",
  });
};

/**
 * @summary Login
 */
export const adminsControllerLogin = (loginAdminDto: LoginAdminDto) => {
  return fetchInstance<AuthAdminResponse>({
    url: `/api/v1/admins/login`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: loginAdminDto,
  });
};

export const adminsControllerCreate = (createAdminDto: CreateAdminDto) => {
  return fetchInstance<Admin>({
    url: `/api/v1/admins`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: createAdminDto,
  });
};

export const adminsControllerFind = () => {
  return fetchInstance<Admin>({ url: `/api/v1/admins`, method: "GET" });
};

export const adminsControllerFindOne = ({
  id,
}: AdminsControllerFindOnePathParameters) => {
  return fetchInstance<Admin>({ url: `/api/v1/admins/${id}`, method: "GET" });
};

export const adminsControllerUpdate = (
  { id }: AdminsControllerUpdatePathParameters,
  updateAdminDto: UpdateAdminDto,
) => {
  return fetchInstance<Admin>({
    url: `/api/v1/admins/${id}`,
    method: "PATCH",
    headers: { "Content-Type": "application/json" },
    data: updateAdminDto,
  });
};

export const adminsControllerRemove = ({
  id,
}: AdminsControllerRemovePathParameters) => {
  return fetchInstance<void>({ url: `/api/v1/admins/${id}`, method: "DELETE" });
};

export const authDriverControllerSignup = (
  signUpDriverDto: SignUpDriverDto,
) => {
  return fetchInstance<SendConfirm>({
    url: `/api/v1/auth/driver/signup`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: signUpDriverDto,
  });
};

/**
 * @summary Login
 */
export const authDriverControllerLogin = (loginDriverDto: LoginDriverDto) => {
  return fetchInstance<SendConfirm>({
    url: `/api/v1/auth/driver/login`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: loginDriverDto,
  });
};

/**
 * @summary Confirm
 */
export const authDriverControllerConfirm = (
  confirmDriverDto: ConfirmDriverDto,
  params: AuthDriverControllerConfirmParams,
) => {
  return fetchInstance<AuthDriverResponse>({
    url: `/api/v1/auth/driver/confirm`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: confirmDriverDto,
    params,
  });
};

/**
 * @summary update phone number
 */
export const authDriverControllerUpdateMyNumber = (
  updateDriverPhoneDto: UpdateDriverPhoneDto,
) => {
  return fetchInstance<SendConfirm>({
    url: `/api/v1/auth/driver/updateMyNumber`,
    method: "PATCH",
    headers: { "Content-Type": "application/json" },
    data: updateDriverPhoneDto,
  });
};

export const driversControllerFind = (params?: DriversControllerFindParams) => {
  return fetchInstance<PaginatedResponse>({
    url: `/api/v1/drivers`,
    method: "GET",
    params,
  });
};

export const driversControllerGetMyPhotos = () => {
  return fetchInstance<Driver>({
    url: `/api/v1/drivers/myPhotos`,
    method: "GET",
  });
};

export const driversControllerGetMe = () => {
  return fetchInstance<Driver>({ url: `/api/v1/drivers/me`, method: "GET" });
};

export const driversControllerUpdateMe = (updateDriverDto: UpdateDriverDto) => {
  return fetchInstance<Driver>({
    url: `/api/v1/drivers/me`,
    method: "PATCH",
    headers: { "Content-Type": "application/json" },
    data: updateDriverDto,
  });
};

export const driversControllerDeleteMe = () => {
  return fetchInstance<void>({ url: `/api/v1/drivers/me`, method: "DELETE" });
};

export const driversControllerFindOne = ({
  id,
}: DriversControllerFindOnePathParameters) => {
  return fetchInstance<Driver>({ url: `/api/v1/drivers/${id}`, method: "GET" });
};

export const driversControllerUpdate = (
  { id }: DriversControllerUpdatePathParameters,
  updateDriverDto: UpdateDriverDto,
) => {
  return fetchInstance<Driver>({
    url: `/api/v1/drivers/${id}`,
    method: "PATCH",
    headers: { "Content-Type": "application/json" },
    data: updateDriverDto,
  });
};

export const driversControllerRemove = ({
  id,
}: DriversControllerRemovePathParameters) => {
  return fetchInstance<void>({
    url: `/api/v1/drivers/${id}`,
    method: "DELETE",
  });
};

export const carControllerFindMine = () => {
  return fetchInstance<Car[]>({
    url: `/api/v1/drivers/cars/mine`,
    method: "GET",
  });
};

export const carControllerFindAll = () => {
  return fetchInstance<Car[]>({
    url: `/api/v1/drivers/cars/all`,
    method: "GET",
  });
};

export const carControllerFindOne = ({
  id,
}: CarControllerFindOnePathParameters) => {
  return fetchInstance<Car>({
    url: `/api/v1/drivers/cars/${id}`,
    method: "GET",
  });
};

export const carControllerUpdate = (
  { id }: CarControllerUpdatePathParameters,
  updateCarDto: UpdateCarDto,
) => {
  return fetchInstance<Car>({
    url: `/api/v1/drivers/cars/${id}`,
    method: "PATCH",
    headers: { "Content-Type": "application/json" },
    data: updateCarDto,
  });
};

export const carControllerDelete = ({
  id,
}: CarControllerDeletePathParameters) => {
  return fetchInstance<void>({
    url: `/api/v1/drivers/cars/${id}`,
    method: "DELETE",
  });
};

export const carControllerCreate = (createCarDto: CreateCarDto) => {
  return fetchInstance<Car>({
    url: `/api/v1/drivers/cars`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: createCarDto,
  });
};

export const carControllerAddAdvantagesToCar = (
  { id }: CarControllerAddAdvantagesToCarPathParameters,
  addAdvansToCarDto: AddAdvansToCarDto,
) => {
  return fetchInstance<void>({
    url: `/api/v1/drivers/cars/${id}/advantages`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: addAdvansToCarDto,
  });
};

export const carControllerRemoveAdvantagesFromCar = ({
  id,
  advantageId,
}: CarControllerRemoveAdvantagesFromCarPathParameters) => {
  return fetchInstance<void>({
    url: `/api/v1/drivers/cars/${id}/advantages/${advantageId}`,
    method: "DELETE",
  });
};

export const advantagesControllerCreate = (
  createAdvantageDto: CreateAdvantageDto,
) => {
  return fetchInstance<Advantage>({
    url: `/api/v1/advantages`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: createAdvantageDto,
  });
};

export const advantagesControllerFindAll = () => {
  return fetchInstance<Advantage[]>({
    url: `/api/v1/advantages`,
    method: "GET",
  });
};

export const advantagesControllerFindOne = ({
  id,
}: AdvantagesControllerFindOnePathParameters) => {
  return fetchInstance<Advantage>({
    url: `/api/v1/advantages/${id}`,
    method: "GET",
  });
};

export const advantagesControllerUpdate = (
  { id }: AdvantagesControllerUpdatePathParameters,
  updateAdvantageDto: UpdateAdvantageDto,
) => {
  return fetchInstance<Advantage>({
    url: `/api/v1/advantages/${id}`,
    method: "PATCH",
    headers: { "Content-Type": "application/json" },
    data: updateAdvantageDto,
  });
};

export const advantagesControllerRemove = ({
  id,
}: AdvantagesControllerRemovePathParameters) => {
  return fetchInstance<void>({
    url: `/api/v1/advantages/${id}`,
    method: "DELETE",
  });
};

/**
 * @summary Upload single photo
 */
export const photosControllerUploadSingle = (
  photosControllerUploadSingleBody: PhotosControllerUploadSingleBody,
) => {
  const formData = new FormData();
  formData.append("photo", photosControllerUploadSingleBody.photo);

  return fetchInstance<void>({
    url: `/api/v1/photos/single`,
    method: "POST",
    headers: { "Content-Type": "multipart/form-data" },
    data: formData,
  });
};

/**
 * Upload up to 3 photos at a time.
 * @summary Upload multiple photos
 */
export const photosControllerUploadMultiple = (
  photosControllerUploadMultipleBody: PhotosControllerUploadMultipleBody,
) => {
  const formData = new FormData();
  photosControllerUploadMultipleBody.photos.forEach((value) =>
    formData.append("photos", value),
  );

  return fetchInstance<void>({
    url: `/api/v1/photos/multiple`,
    method: "POST",
    headers: { "Content-Type": "multipart/form-data" },
    data: formData,
  });
};

export const orderControllerFindMine = () => {
  return fetchInstance<Order[]>({ url: `/api/v1/orders/mine`, method: "GET" });
};

export const orderControllerFindAll = () => {
  return fetchInstance<Order[]>({ url: `/api/v1/orders/all`, method: "GET" });
};

export const orderControllerFindAllWaiting = () => {
  return fetchInstance<Order[]>({
    url: `/api/v1/orders/waiting`,
    method: "GET",
  });
};

export const orderControllerFindOne = ({
  id,
}: OrderControllerFindOnePathParameters) => {
  return fetchInstance<Order>({ url: `/api/v1/orders/${id}`, method: "GET" });
};

export const orderControllerUpdate = (
  { id }: OrderControllerUpdatePathParameters,
  updateOrderDto: UpdateOrderDto,
) => {
  return fetchInstance<Order>({
    url: `/api/v1/orders/${id}`,
    method: "PATCH",
    headers: { "Content-Type": "application/json" },
    data: updateOrderDto,
  });
};

export const orderControllerDelete = ({
  id,
}: OrderControllerDeletePathParameters) => {
  return fetchInstance<void>({ url: `/api/v1/orders/${id}`, method: "DELETE" });
};

export const orderControllerCreate = (createOrderDto: CreateOrderDto) => {
  return fetchInstance<Order>({
    url: `/api/v1/orders`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: createOrderDto,
  });
};

export const orderControllerAddAdvantagesToOrder = (
  { id }: OrderControllerAddAdvantagesToOrderPathParameters,
  addAdvansToOrderDto: AddAdvansToOrderDto,
) => {
  return fetchInstance<void>({
    url: `/api/v1/orders/${id}/advantages`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: addAdvansToOrderDto,
  });
};

export const orderControllerRemoveAdvantagesFromOrder = ({
  id,
  advantageId,
}: OrderControllerRemoveAdvantagesFromOrderPathParameters) => {
  return fetchInstance<void>({
    url: `/api/v1/orders/${id}/advantages/${advantageId}`,
    method: "DELETE",
  });
};

export type AuthUserControllerSignupResult = NonNullable<
  Awaited<ReturnType<typeof authUserControllerSignup>>
>;
export type AuthUserControllerLoginResult = NonNullable<
  Awaited<ReturnType<typeof authUserControllerLogin>>
>;
export type AuthUserControllerConfirmResult = NonNullable<
  Awaited<ReturnType<typeof authUserControllerConfirm>>
>;
export type AuthUserControllerUpdateMyNumberResult = NonNullable<
  Awaited<ReturnType<typeof authUserControllerUpdateMyNumber>>
>;
export type UsersControllerFindResult = NonNullable<
  Awaited<ReturnType<typeof usersControllerFind>>
>;
export type UsersControllerGetMyPhotosResult = NonNullable<
  Awaited<ReturnType<typeof usersControllerGetMyPhotos>>
>;
export type UsersControllerGetMeResult = NonNullable<
  Awaited<ReturnType<typeof usersControllerGetMe>>
>;
export type UsersControllerUpdateMeResult = NonNullable<
  Awaited<ReturnType<typeof usersControllerUpdateMe>>
>;
export type UsersControllerDeleteMeResult = NonNullable<
  Awaited<ReturnType<typeof usersControllerDeleteMe>>
>;
export type UsersControllerFindOneResult = NonNullable<
  Awaited<ReturnType<typeof usersControllerFindOne>>
>;
export type UsersControllerUpdateResult = NonNullable<
  Awaited<ReturnType<typeof usersControllerUpdate>>
>;
export type UsersControllerRemoveResult = NonNullable<
  Awaited<ReturnType<typeof usersControllerRemove>>
>;
export type RolesControllerFindResult = NonNullable<
  Awaited<ReturnType<typeof rolesControllerFind>>
>;
export type RolesControllerCreateResult = NonNullable<
  Awaited<ReturnType<typeof rolesControllerCreate>>
>;
export type RolesControllerFindOneResult = NonNullable<
  Awaited<ReturnType<typeof rolesControllerFindOne>>
>;
export type RolesControllerUpdateResult = NonNullable<
  Awaited<ReturnType<typeof rolesControllerUpdate>>
>;
export type RolesControllerAddPermissionsResult = NonNullable<
  Awaited<ReturnType<typeof rolesControllerAddPermissions>>
>;
export type RolesControllerDeletePermissionsResult = NonNullable<
  Awaited<ReturnType<typeof rolesControllerDeletePermissions>>
>;
export type PermissionsControllerFindResult = NonNullable<
  Awaited<ReturnType<typeof permissionsControllerFind>>
>;
export type PermissionsControllerFindOneResult = NonNullable<
  Awaited<ReturnType<typeof permissionsControllerFindOne>>
>;
export type CitiesControllerCreateResult = NonNullable<
  Awaited<ReturnType<typeof citiesControllerCreate>>
>;
export type CitiesControllerFindResult = NonNullable<
  Awaited<ReturnType<typeof citiesControllerFind>>
>;
export type CitiesControllerFindOneResult = NonNullable<
  Awaited<ReturnType<typeof citiesControllerFindOne>>
>;
export type CitiesControllerUpdateResult = NonNullable<
  Awaited<ReturnType<typeof citiesControllerUpdate>>
>;
export type CitiesControllerRemoveResult = NonNullable<
  Awaited<ReturnType<typeof citiesControllerRemove>>
>;
export type EmployeesControllerLoginResult = NonNullable<
  Awaited<ReturnType<typeof employeesControllerLogin>>
>;
export type EmployeesControllerFindResult = NonNullable<
  Awaited<ReturnType<typeof employeesControllerFind>>
>;
export type EmployeesControllerCreateResult = NonNullable<
  Awaited<ReturnType<typeof employeesControllerCreate>>
>;
export type EmployeesControllerFindOneResult = NonNullable<
  Awaited<ReturnType<typeof employeesControllerFindOne>>
>;
export type EmployeesControllerUpdateResult = NonNullable<
  Awaited<ReturnType<typeof employeesControllerUpdate>>
>;
export type EmployeesControllerRemoveResult = NonNullable<
  Awaited<ReturnType<typeof employeesControllerRemove>>
>;
export type AdminsControllerLoginResult = NonNullable<
  Awaited<ReturnType<typeof adminsControllerLogin>>
>;
export type AdminsControllerCreateResult = NonNullable<
  Awaited<ReturnType<typeof adminsControllerCreate>>
>;
export type AdminsControllerFindResult = NonNullable<
  Awaited<ReturnType<typeof adminsControllerFind>>
>;
export type AdminsControllerFindOneResult = NonNullable<
  Awaited<ReturnType<typeof adminsControllerFindOne>>
>;
export type AdminsControllerUpdateResult = NonNullable<
  Awaited<ReturnType<typeof adminsControllerUpdate>>
>;
export type AdminsControllerRemoveResult = NonNullable<
  Awaited<ReturnType<typeof adminsControllerRemove>>
>;
export type AuthDriverControllerSignupResult = NonNullable<
  Awaited<ReturnType<typeof authDriverControllerSignup>>
>;
export type AuthDriverControllerLoginResult = NonNullable<
  Awaited<ReturnType<typeof authDriverControllerLogin>>
>;
export type AuthDriverControllerConfirmResult = NonNullable<
  Awaited<ReturnType<typeof authDriverControllerConfirm>>
>;
export type AuthDriverControllerUpdateMyNumberResult = NonNullable<
  Awaited<ReturnType<typeof authDriverControllerUpdateMyNumber>>
>;
export type DriversControllerFindResult = NonNullable<
  Awaited<ReturnType<typeof driversControllerFind>>
>;
export type DriversControllerGetMyPhotosResult = NonNullable<
  Awaited<ReturnType<typeof driversControllerGetMyPhotos>>
>;
export type DriversControllerGetMeResult = NonNullable<
  Awaited<ReturnType<typeof driversControllerGetMe>>
>;
export type DriversControllerUpdateMeResult = NonNullable<
  Awaited<ReturnType<typeof driversControllerUpdateMe>>
>;
export type DriversControllerDeleteMeResult = NonNullable<
  Awaited<ReturnType<typeof driversControllerDeleteMe>>
>;
export type DriversControllerFindOneResult = NonNullable<
  Awaited<ReturnType<typeof driversControllerFindOne>>
>;
export type DriversControllerUpdateResult = NonNullable<
  Awaited<ReturnType<typeof driversControllerUpdate>>
>;
export type DriversControllerRemoveResult = NonNullable<
  Awaited<ReturnType<typeof driversControllerRemove>>
>;
export type CarControllerFindMineResult = NonNullable<
  Awaited<ReturnType<typeof carControllerFindMine>>
>;
export type CarControllerFindAllResult = NonNullable<
  Awaited<ReturnType<typeof carControllerFindAll>>
>;
export type CarControllerFindOneResult = NonNullable<
  Awaited<ReturnType<typeof carControllerFindOne>>
>;
export type CarControllerUpdateResult = NonNullable<
  Awaited<ReturnType<typeof carControllerUpdate>>
>;
export type CarControllerDeleteResult = NonNullable<
  Awaited<ReturnType<typeof carControllerDelete>>
>;
export type CarControllerCreateResult = NonNullable<
  Awaited<ReturnType<typeof carControllerCreate>>
>;
export type CarControllerAddAdvantagesToCarResult = NonNullable<
  Awaited<ReturnType<typeof carControllerAddAdvantagesToCar>>
>;
export type CarControllerRemoveAdvantagesFromCarResult = NonNullable<
  Awaited<ReturnType<typeof carControllerRemoveAdvantagesFromCar>>
>;
export type AdvantagesControllerCreateResult = NonNullable<
  Awaited<ReturnType<typeof advantagesControllerCreate>>
>;
export type AdvantagesControllerFindAllResult = NonNullable<
  Awaited<ReturnType<typeof advantagesControllerFindAll>>
>;
export type AdvantagesControllerFindOneResult = NonNullable<
  Awaited<ReturnType<typeof advantagesControllerFindOne>>
>;
export type AdvantagesControllerUpdateResult = NonNullable<
  Awaited<ReturnType<typeof advantagesControllerUpdate>>
>;
export type AdvantagesControllerRemoveResult = NonNullable<
  Awaited<ReturnType<typeof advantagesControllerRemove>>
>;
export type PhotosControllerUploadSingleResult = NonNullable<
  Awaited<ReturnType<typeof photosControllerUploadSingle>>
>;
export type PhotosControllerUploadMultipleResult = NonNullable<
  Awaited<ReturnType<typeof photosControllerUploadMultiple>>
>;
export type OrderControllerFindMineResult = NonNullable<
  Awaited<ReturnType<typeof orderControllerFindMine>>
>;
export type OrderControllerFindAllResult = NonNullable<
  Awaited<ReturnType<typeof orderControllerFindAll>>
>;
export type OrderControllerFindAllWaitingResult = NonNullable<
  Awaited<ReturnType<typeof orderControllerFindAllWaiting>>
>;
export type OrderControllerFindOneResult = NonNullable<
  Awaited<ReturnType<typeof orderControllerFindOne>>
>;
export type OrderControllerUpdateResult = NonNullable<
  Awaited<ReturnType<typeof orderControllerUpdate>>
>;
export type OrderControllerDeleteResult = NonNullable<
  Awaited<ReturnType<typeof orderControllerDelete>>
>;
export type OrderControllerCreateResult = NonNullable<
  Awaited<ReturnType<typeof orderControllerCreate>>
>;
export type OrderControllerAddAdvantagesToOrderResult = NonNullable<
  Awaited<ReturnType<typeof orderControllerAddAdvantagesToOrder>>
>;
export type OrderControllerRemoveAdvantagesFromOrderResult = NonNullable<
  Awaited<ReturnType<typeof orderControllerRemoveAdvantagesFromOrder>>
>;
