/**
 * Generated by orval v6.25.0 üç∫
 * Do not edit manually.
 * naqleh
 * naqleh API
 * OpenAPI spec version: 1.0
 */
export type DriverControllerRemovePathParameters = {
  id: string;
};
export type DriverControllerUpdatePathParameters = {
  id: string;
};
export type DriverControllerFindOnePathParameters = {
  id: string;
};
export type PhotosControllerUploadMultipleBody = {
  photos: Blob[];
};

export type PhotosControllerUploadSingleBody = {
  photo: Blob;
};

export type PermissionsControllerFindOnePathParameters = {
  id: string;
};
export type RolesControllerDeletePermissionsPathParameters = {
  id: string;
};
export type RolesControllerAddPermissionsPathParameters = {
  id: string;
};
export type RolesControllerUpdatePathParameters = {
  id: string;
};
export type RolesControllerFindOnePathParameters = {
  id: string;
};
export type AdminsControllerRemovePathParameters = {
  id: string;
};
export type AdminsControllerUpdatePathParameters = {
  id: string;
};
export type AdminsControllerFindOnePathParameters = {
  id: string;
};
export type EmployeesControllerRemovePathParameters = {
  id: string;
};
export type EmployeesControllerUpdatePathParameters = {
  id: string;
};
export type EmployeesControllerFindOnePathParameters = {
  id: string;
};
export type CitiesControllerRemovePathParameters = {
  id: string;
};
export type CitiesControllerUpdatePathParameters = {
  id: string;
};
export type CitiesControllerFindOnePathParameters = {
  id: string;
};
export type UsersControllerRemovePathParameters = {
  id: string;
};
export type UsersControllerUpdatePathParameters = {
  id: string;
};
export type UsersControllerFindOnePathParameters = {
  id: string;
};
export type UsersControllerFindParams = {
  page?: number;
  limit?: number;
};

export type AuthControllerConfirmParams = {
  /**
   * assign true to the field to confirm new number
   */
  phoneConfirm: boolean;
};

export type UpdateDriverDto = { [key: string]: any };

export type CreateDriverDto = { [key: string]: any };

export type UpdateRoleDto = {
  permissionsIds: string[];
};

export type Permission = {
  action: string;
  createdAt: Date;
  id: string;
  subject: string;
  updatedAt: Date;
};

export type Role = {
  createdAt: Date;
  id: string;
  name: string;
  permissions: Permission[];
  updatedAt: Date;
};

export type CreateRoleDto = {
  /** the rule name */
  name: string;
  /** the Ids of permissions */
  permissionsIds: string[];
};

export type OmitTypeClass = {
  action: string;
  id: string;
  subject: string;
};

export type UpdateAdminDto = {
  name?: string;
  password: string;
  phone: string;
  photo?: string;
};

export type CreateAdminDto = {
  firstName: string;
  lastName: string;
  password: string;
  phone: string;
  photo?: string;
};

export type Admin = {
  createdAt: Date;
  firstName: string;
  id: string;
  lastName: string;
  phone: string;
  photo: BasePhoto;
  updatedAt: Date;
};

export type AuthAdminResponse = {
  admin: Admin;
  token: string;
};

export type LoginAdminDto = {
  password: string;
  phone: string;
};

export type UpdateEmployeeDto = {
  address: string;
  name?: string;
  password: string;
  phone: string;
  photo?: string;
};

export type CreateEmployeeDto = {
  address: string;
  firstName: string;
  lastName: string;
  password: string;
  phone: string;
  photo?: string;
};

export type Employee = {
  createdAt: Date;
  firstName: string;
  id: string;
  lastName: string;
  phone: string;
  photo: BasePhoto;
  updatedAt: Date;
};

export type AuthEmployeeResponse = {
  employee: Employee;
  token: string;
};

export type UpdateCityDto = {
  name?: string;
};

export type City = {
  createdAt: Date;
  id: string;
  name: string;
  updatedAt: Date;
};

export type CreateCityDto = {
  name: string;
};

export type UpdateUserDto = {
  firstName: string;
  lastName: string;
  photo?: string;
};

export type GlobalEntity = {
  createdAt: Date;
  id: string;
  updatedAt: Date;
};

export type PaginatedResponse = {
  data: GlobalEntity;
  pageNumber: number;
  totalDataCount: number;
  totalPages: number;
};

export type UpdatePhoneDto = {
  phone: string;
};

export type BasePhoto = {
  blurHash: string;
  createdAt: Date;
  id: string;
  mobileUrl: string;
  profileUrl: string;
  updatedAt: Date;
  webUrl: string;
};

export type User = {
  createdAt: Date;
  firstName: string;
  id: string;
  lastName: string;
  phone: string;
  photo: BasePhoto;
  updatedAt: Date;
  wallet: Wallet;
};

export type AuthUserResponse = {
  token: string;
  user: User;
};

export type Function = { [key: string]: any };

export type Wallet = {
  available: Function;
  createdAt: Date;
  id: string;
  pending: number;
  total: number;
  updatedAt: Date;
};

export type ConfirmDto = {
  otp: string;
  phone: string;
};

export type LoginDto = {
  phone: string;
};

export type SendConfirm = {
  message: string;
};

export type SignUpDto = {
  firstName: string;
  lastName: string;
  phone: string;
};
